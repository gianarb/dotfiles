snippet cfb "Bootstrap cloudformation" !b
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  VPC Peering foundation

  The foundation of the VPC peering for every customer is not managed by Potato
  but via CloudFormation. This is what we need to do.
Parameters:
  Username:
    Type: String
    Description: "The name of the customer"
  Env:
    Type: String
    Description: "The environment"
  ClusterID:
    Type: String
    Description: "The ID of the cluster"
  Cidr:
    Type: String
    Description: "The VPC and subnet cidr"
  AZ:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: "The AZ where the subnet will be placed."
Resources:
  Internet:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref Env
              - !Ref ClusterID
        - Key: Env
          Value: !Ref Env
        - Key: Username
          Value: !Ref Username
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref Cidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref Env
              - !Ref ClusterID
        - Key: ClusterID
          Value: !Ref ClusterID
        - Key: Env
          Value: !Ref Env
        - Key: Username
          Value: !Ref Username
$0
endsnippet
snippet cfsg "Cloudformation securitygroup" !b
		Type: AWS::EC2::SecurityGroup
		Properties: 
			GroupName: String
			GroupDescription: String
			SecurityGroupEgress:
				- CidrIp: String
					CidrIpv6: String
					Description: String
					FromPort: Integer
					IpProtocol: String
					SourceSecurityGroupId: String
					SourceSecurityGroupName: String
					SourceSecurityGroupOwnerId: String
					ToPort: Integer   - Security Group Rule
			SecurityGroupIngress:
				- Security Group Rule
			Tags:
				- Resource Tag
			VpcId: String
endsnippet
