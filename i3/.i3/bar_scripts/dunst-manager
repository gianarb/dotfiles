#!/usr/bin/env bash

suspend() {
  pkill -u "$USER" -USR1 dunst
  echo "disabled" > /tmp/dunst-status
}

resume() {
  pkill -u "$USER" -USR2 dunst
  echo "enabled" > /tmp/dunst-status
}

toggle() {
  if [[ $(status) = "enabled" ]]; then
    suspend
    return
  fi

  if [[ $(status) = "disabled" ]]; then
    resume
    return
  fi
}


status() {
  status=$([ -a /tmp/dunst-status ] && cat /tmp/dunst-status)
  # if the status file is not present but dunst is running for the current user just assume that is enabled
  if [ $"$status" = "" ] && [ $(ps -u $USER | grep dunst | wc -l) > 0 ]; then
    echo "enabled"
    return
  fi
  echo $status
}

status_interactive() {
  if [ ! -z $BLOCK_BUTTON ];
  then
    toggle
  fi

  status
  if [[ $(status) = "disabled" ]]; then
    echo ""
    echo "#FFAE00"
  fi
}

if [ -z $1 ]; then
  echo "USAGE":
  echo "  dunst-manager enable         re-enable notifications"
  echo "  dunst-manager disable        disable notifications"
  echo "  dunst-manager toggle         toggle notifications"
  echo "  dunst-manager status         check if notifications are currently enabled (1) or disabled (0)"
  exit
fi

if [[ "$1" = "status" ]]; then
  status
  exit
fi

if [[ "$1" = "status-interactive" ]]; then
  status_interactive
  exit
fi

if [[ "$1" = "enable" ]]; then
  resume
  exit
fi

if [[ "$1" = "disable" ]]; then
  suspend
  exit
fi

if [[ "$1" = "toggle" ]]; then
  toggle
  exit
fi
